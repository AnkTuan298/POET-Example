@using POETWeb.Models.ViewModels
@model StudentDashboardVM
@{
    ViewData["Title"] = "Student dashboard";
}

<nav class="navbar navbar-expand-lg lp-nav bg-white shadow-sm sticky-top py-3">
    <div class="container-xxl px-4">
        <a class="navbar-brand d-inline-flex align-items-center" asp-controller="Student" asp-action="Index">
            <img src="@Url.Content("~/LOGO/POETLOGO.png")" alt="POET" class="brand-logo" />
        </a>

        <div class="ms-auto d-flex align-items-center gap-2">

            <div class="user-menu ms-1">
                <button class="user-trigger user-trigger--elevated" type="button"
                        aria-haspopup="true" aria-expanded="false">
                    <img src="@Url.Content("~/images/avatar-default.png")" class="avatar-sm me-2" alt="me" />
                    <span>@Model.FirstName</span>
                    <svg width="14" height="14" viewBox="0 0 20 20" aria-hidden="true">
                        <path d="M5 7l5 6 5-6z" fill="currentColor" />
                    </svg>
                </button>

                <div class="user-panel" role="menu" aria-label="Account menu">
                    <div class="user-panel__cap"></div>
                    <div class="user-panel__header">@Model.FirstName</div>

                    <a class="user-item" role="menuitem"
                       asp-area="Identity" asp-page="/Account/Manage/Index">
                        Profile
                    </a>

                    <form class="m-0" asp-area="Identity" asp-page="/Account/Logout" method="post">
                        <button type="submit" class="user-item-btn" role="menuitem">Log out</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="tdash-wrap">
    <div class="container-xxl px-4 pt-4">
        <div class="d-flex align-items-center justify-content-between flex-wrap gap-3 mb-3">
            <div>
                <h1 class="display-6 fw-bold text-slate-900 mb-1">Welcome back, @Model.FirstName!</h1>
                <p class="text-slate-600 mb-0">Continue your learning journey</p>
            </div>
        </div>
    </div>

    <section class="container-xxl px-4 mb-3">
        <div class="row g-3">
            @* 1 *@
            <div class="col-12 col-md-6 col-lg-3">
                <div class="tdash-stat">
                    <div class="tdash-stat__icon"><i class="bi bi-briefcase"></i></div>
                    <div class="tdash-stat__body">
                        <div class="tdash-stat__label">Joined Classes</div>
                        <div class="tdash-stat__value">@Model.JoinedClasses</div>
                    </div>
                </div>
            </div>
            @* 2 *@
            <div class="col-12 col-md-6 col-lg-3">
                <div class="tdash-stat">
                    <div class="tdash-stat__icon"><i class="bi bi-check2-square"></i></div>
                    <div class="tdash-stat__body">
                        <div class="tdash-stat__label">Assignments Due</div>
                        <div class="tdash-stat__value">@Model.AssignmentsDue</div>
                    </div>
                </div>
            </div>
            @* 3 *@
            <div class="col-12 col-md-6 col-lg-3">
                <div class="tdash-stat">
                    <div class="tdash-stat__icon"><i class="bi bi-collection-play"></i></div>
                    <div class="tdash-stat__body">
                        <div class="tdash-stat__label">Materials Posted</div>
                        <div class="tdash-stat__value">@Model.MaterialsPosted</div>
                    </div>
                </div>
            </div>
            @* 4: đổi thành Classes Active This Week *@
            <div class="col-12 col-md-6 col-lg-3">
                <div class="tdash-stat">
                    <div class="tdash-stat__icon"><i class="bi bi-activity"></i></div>
                    <div class="tdash-stat__body">
                        <div class="tdash-stat__label">Classes Active This Week</div>
                        <div class="tdash-stat__value">@Model.HoursLearned</div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- My Classes -->
    <section class="container-xxl px-4 mb-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="fw-bold text-slate-900 m-0">My Classes</h4>

            <div class="tdash-toolbar d-flex align-items-stretch gap-2" style="min-width:480px;">
                <div class="dash-search input-group flex-grow-1">
                    <span class="input-group-text bg-white ctl-h"><i class="bi bi-search"></i></span>
                    <input id="searchBox" class="form-control ctl-h" placeholder="Search classes..." />
                </div>

                <button class="btn btn-primary ctl-btn px-4 text-nowrap"
                        data-bs-toggle="modal" data-bs-target="#joinModal">
                    + Join Class
                </button>
            </div>


        </div>


        @{
            var coverClasses = new[] {
                "cover--blue","cover--indigo","cover--purple","cover--violet","cover--pink",
                "cover--rose","cover--orange","cover--amber","cover--green","cover--teal"
                };
            Func<int, int> pick = id => Math.Abs(id) % coverClasses.Length;
        }

        <div class="class-carousel" id="stuCarousel">
            <button class="cc-arrow cc-left" type="button" aria-label="Previous classes" title="Previous">&#8249;</button>

            <div class="cc-viewport" id="stuViewport">
                <div class="cc-track">
                    @foreach (var cls in Model.Classes ?? Enumerable.Empty<POETWeb.Models.ViewModels.StudentClassCardVM>())
                    {
                        var coverClass = coverClasses[pick(cls.Id)];
                        <div class="cc-item">
                            <a class="class-card-link js-class-quickview"
                               asp-controller="Classrooms"
                               asp-action="Details"
                               asp-route-id="@cls.Id"
                               data-class-id="@cls.Id"
                               data-url="@Url.Action("DetailsPartial","Classrooms", new { id = cls.Id })"
                               aria-label="Open class @cls.Title details"
                               role="button"
                               tabindex="0">
                                <div class="class-card"
                                     data-title="@cls.Title"
                                     data-subject="@((cls.Subject ?? ""))">
                                    <div class="cover @coverClass"></div>
                                    <div class="class-card-body p-3">
                                        <div class="fw-bold text-slate-900 class-title">@cls.Title</div>
                                        @{
                                            var subj = (cls.Subject ?? "").Trim();
                                        }
                                        <div class="subject-line text-slate-600 class-subject">
                                            <span class="fw-semibold">Subject :</span> @subj
                                        </div>
                                        <div class="text-muted">
                                            @cls.Students @("student" + (cls.Students == 1 ? "" : "s")) enrolled
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>

            <button class="cc-arrow cc-right" type="button" aria-label="Next classes" title="Next">&#8250;</button>
        </div>
    </section>

</div>

<!-- Join Modal -->
<div class="modal fade" id="joinModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0" style="border-radius:16px;">
            <div class="modal-header border-0">
                <h5 class="modal-title">Join a class</h5>
                <button class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="joinForm" method="post" asp-controller="Student" asp-action="JoinByCode">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <label class="form-label">Class code</label>
                    <input name="Code" class="form-control" placeholder="6-Digit Code" autocomplete="off" required />
                    <div class="text-danger small mt-2 d-none" id="joinErr"></div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button id="joinSubmit" type="button" class="btn btn-primary">
                        <span class="label">Join</span>
                        <span class="spinner-border spinner-border-sm ms-2 d-none" aria-hidden="true"></span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Join Success Modal -->
<div class="modal fade" id="joinSuccess" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0" style="border-radius:16px;">
            <div class="modal-body text-center py-4">
                <div class="brand-bubble mb-3">✔</div>
                <h5 class="mb-1 text-slate-900">Join successful</h5>
                <div class="text-slate-600"><span id="jsClassName"></span> • <small id="jsClassCode"></small></div>
                <div class="text-slate-600">Refreshing dashboard…</div>
            </div>
        </div>
    </div>
</div>

<!-- Quick View Modal -->
<div class="modal fade" id="stuQuickView" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0" style="border-radius:16px;">
            <div class="modal-header border-0">
                <h5 class="modal-title fw-bold text-slate-900">Class Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <!-- must be #stuQvBody for script -->
            <div id="stuQvBody" class="modal-body">
                <div class="text-center py-5">
                    <div class="spinner-border" role="status"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick View -->
<div class="modal fade" id="stuQuickView" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0" style="border-radius:16px;">
            <div class="modal-header border-0">
                <h5 class="modal-title fw-bold text-slate-900">Class Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div id="stuQvBody" class="modal-body">
                <div class="text-center py-5">
                    <div class="spinner-border" role="status"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Leave Confirm -->
<div class="modal fade" id="stuLeaveConfirm" tabindex="-1"
     data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content border-0" style="border-radius:16px; z-index:1066;">
            <div class="modal-header border-0 pb-0">
                <h6 class="modal-title text-danger">Leave class?</h6>
                <button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                This action cannot be undone.
                <div class="text-danger small mt-2 d-none" id="lvErr">Something went wrong. Try again.</div>
            </div>
            <div class="modal-footer border-0 pt-0">
                <button class="btn btn-light border" data-bs-dismiss="modal">Cancel</button>
                <form id="lvForm" method="post" asp-controller="Student" asp-action="Leave" class="m-0">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="classId" id="leaveId" />
                    <button id="lvSubmit" type="submit" class="btn btn-danger">
                        <span class="label">Yes, leave</span>
                        <span class="spinner-border spinner-border-sm ms-2 d-none" aria-hidden="true"></span>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Leave Success -->
<div class="modal fade" id="stuLeaveSuccess" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0" style="border-radius:16px;">
            <div class="modal-body text-center py-4">
                <div class="brand-bubble mb-3">✔</div>
                <h5 class="mb-1 text-slate-900">Left the class</h5>
                <div class="text-slate-600">Refreshing…</div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        (() => {
          "use strict";

          /* ===== helpers ===== */
          const $  = (s, r=document) => r.querySelector(s);
          const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));
          const norm = s => (s||"").normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase().trim();
          const debounce = (fn, ms=120) => { let t; return (...a)=>{ clearTimeout(t); t=setTimeout(()=>fn(...a), ms); }; };

          /* ===== profile dropdown (khớp CSS dùng .is-open) ===== */
          document.addEventListener("DOMContentLoaded", () => {
            const menu = $(".user-menu"); if (!menu) return;
            const trigger = $(".user-trigger", menu);
            const panel   = $(".user-panel", menu);

            const open  = () => { menu.classList.add("is-open"); trigger?.setAttribute("aria-expanded","true"); };
            const close = () => { menu.classList.remove("is-open"); trigger?.setAttribute("aria-expanded","false"); };
            const toggle= () => menu.classList.contains("is-open") ? close() : open();

            trigger?.addEventListener("mouseenter", open);
            panel  ?.addEventListener("mouseenter", open);
            trigger?.addEventListener("mouseleave", ()=> setTimeout(()=>{ if(!menu.matches(":hover")) close(); }, 140));
            panel  ?.addEventListener("mouseleave", ()=> setTimeout(()=>{ if(!menu.matches(":hover")) close(); }, 140));

            trigger?.addEventListener("click", e => { e.stopPropagation(); toggle(); });
            panel  ?.addEventListener("click", e => e.stopPropagation());
            document.addEventListener("click", close);
            document.addEventListener("keydown", e => { if (e.key === "Escape") close(); });
          });

          /* ===== Join Class (AJAX + success modal) ===== */
          document.addEventListener("DOMContentLoaded", () => {
            const form  = $("#joinForm");
            const err   = $("#joinErr");
            const btn   = $("#joinSubmit");
            const joinM = $("#joinModal")   ? bootstrap.Modal.getOrCreateInstance($("#joinModal")) : null;
            const okM   = $("#joinSuccess") ? bootstrap.Modal.getOrCreateInstance($("#joinSuccess"), { backdrop:"static", keyboard:false }) : null;

            form?.addEventListener("submit", e => e.preventDefault());
            const setBusy = on => {
              if (!btn) return;
              const sp = btn.querySelector(".spinner-border");
              if (on) { btn.setAttribute("disabled","disabled"); sp && sp.classList.remove("d-none"); }
              else    { btn.removeAttribute("disabled");         sp && sp.classList.add("d-none"); }
            };

            btn?.addEventListener("click", async () => {
              if (!form) return;
              err?.classList.add("d-none");
              setBusy(true);
              try {
                const fd   = new FormData(form);
                const resp = await fetch(form.action, {
                  method:"POST", body:fd, credentials:"same-origin",
                  headers:{ "X-Requested-With":"XMLHttpRequest" }
                });
                let data = null; try { data = await resp.json(); } catch {}
                if (!resp.ok || !data?.ok) throw new Error((data && (data.message||data.error)) || "Join failed");

                joinM?.hide();
                const n = $("#jsClassName"), c = $("#jsClassCode");
                if (n) n.textContent = data.className || "";
                if (c) c.textContent = data.code || "";
                okM?.show();
                setTimeout(()=>location.reload(), 2000);
              } catch(ex) {
                if (err) { err.textContent = ex?.message || "Join failed."; err.classList.remove("d-none"); }
                console.error(ex);
              } finally {
                setBusy(false);
              }
            });
          });

          /* ===== Search + carousel (4 thẻ/khung) ===== */
          document.addEventListener("DOMContentLoaded", () => {
            const searchBox = $("#searchBox");
            const carousel  = $("#stuCarousel");
            const viewport  = $("#stuViewport");

            if (carousel && viewport) {
              const track = $(".cc-track", viewport); if (!track) return;
              const items = $$(".cc-item", track);
              const btnL  = $(".cc-left",  carousel);
              const btnR  = $(".cc-right", carousel);
              const perPage = 4;

              const visibleItems = () => items.filter(it => it.style.display !== "none");
              const maxScrollLeft= () => viewport.scrollWidth - viewport.clientWidth - 2;
              const pageWidth    = () => viewport.clientWidth;

              function updateArrows(){
                const vis = visibleItems();
                if (vis.length <= perPage) {
                  btnL && (btnL.style.display = "none");
                  btnR && (btnR.style.display = "none");
                  return;
                }
                btnL && (btnL.style.display = (viewport.scrollLeft > 2) ? "inline-flex" : "none");
                btnR && (btnR.style.display = (viewport.scrollLeft < maxScrollLeft()) ? "inline-flex" : "none");
              }

              btnL?.addEventListener("click", ()=>{ viewport.scrollBy({ left:-pageWidth(), behavior:"smooth" }); setTimeout(updateArrows, 350); });
              btnR?.addEventListener("click", ()=>{ viewport.scrollBy({ left: pageWidth(), behavior:"smooth"  }); setTimeout(updateArrows, 350); });
              viewport.addEventListener("scroll", ()=>{ clearTimeout(viewport._t); viewport._t = setTimeout(updateArrows, 100); });
              window.addEventListener("resize", updateArrows);

              const applySearch = () => {
                const q = norm(searchBox ? searchBox.value : "");
                items.forEach(it => {
                  const card = $(".class-card", it);
                  const t = norm(card?.getAttribute("data-title"));
                  const s = norm(card?.getAttribute("data-subject"));
                  it.style.display = (!q || t.includes(q) || s.includes(q)) ? "" : "none";
                });
                viewport.scrollLeft = 0;
                updateArrows();
              };
              searchBox?.addEventListener("input", debounce(applySearch, 120));

              // a11y mở bằng phím
              $$(".js-class-quickview").forEach(a=>{
                a.addEventListener("keydown", e=>{
                  if (e.key==="Enter" || e.key===" ") { e.preventDefault(); a.click(); }
                });
              });

              updateArrows();
              return;
            }

            // fallback dạng lưới (phòng biến chứng)
            const gridCards = $$("#studentClasses .class-card");
            if (gridCards.length && searchBox) {
              searchBox.addEventListener("input", debounce(()=>{
                const q = norm(searchBox.value);
                gridCards.forEach(c=>{
                  const t = norm(c.getAttribute("data-title"));
                  const s = norm(c.getAttribute("data-subject"));
                  const col = c.closest(".col-12, .col-md-6, .col-lg-3") || c.parentElement;
                  if (!col) return;
                  col.style.display = (!q || t.includes(q) || s.includes(q)) ? "" : "none";
                });
              }));
            }
          });

          /* ===== Quick View (student) + Leave class ===== */
          document.addEventListener("DOMContentLoaded", () => {
            // IDs PHẢI khớp markup:
            // - Quick view modal: #stuQuickView, body: #stuQvBody
            // - Leave confirm: #stuLeaveConfirm, form: #lvForm, submit: #lvSubmit, err: #lvErr
            // - Leave success (optional): #stuLeaveSuccess
            const qvEl   = $("#stuQuickView");
            const qvBody = $("#stuQvBody");
            const qv     = qvEl ? bootstrap.Modal.getOrCreateInstance(qvEl, { backdrop:true, keyboard:true }) : null;

            async function openStuQuickView(url){
              if (!qv || !qvBody) return;
              qvBody.innerHTML = '<div class="text-center py-5"><div class="spinner-border" role="status"></div></div>';
              qv.show();
              try{
                const html = await fetch(url, { credentials:"same-origin", headers:{ "X-Requested-With":"XMLHttpRequest" }}).then(r=>{
                  if(!r.ok) throw new Error(r.status); return r.text();
                });
                qvBody.innerHTML = html;
                // không bind once; dùng delegation bên dưới
              }catch(err){
                console.error(err);
                qvBody.innerHTML = '<div class="text-danger text-center p-4">Could not load class details.</div>';
              }
            }

            // click thẻ class -> mở Quick View (Student/DetailsPartial)
            $$(".js-class-quickview").forEach(link=>{
            const id  = link.getAttribute("data-class-id");
            const url = '@Url.Action("DetailsPartial", "Student")' + '?id=' + encodeURIComponent(id || "");

              link.addEventListener("click", e=>{
                if (e.ctrlKey || e.metaKey || e.button===1) return;
                e.preventDefault();
                openStuQuickView(url);
              });
              link.addEventListener("auxclick", e=>{ if (e.button===1) e.preventDefault(); });
            });

            // Leave confirm
            const lvEl   = $("#stuLeaveConfirm");
            const lvForm = $("#lvForm");
            const lvBtn  = $("#lvSubmit");
            const lvErr  = $("#lvErr");
            const mLeave = lvEl ? bootstrap.Modal.getOrCreateInstance(lvEl) : null;

            const okEl   = $("#stuLeaveSuccess");
            const mOk    = okEl ? bootstrap.Modal.getOrCreateInstance(okEl, { backdrop:"static", keyboard:false }) : null;

            // Delegation: nhấn nút [data-leave-class] bên trong Quick View
            qvBody?.addEventListener("click", e => {
              const btn = e.target.closest("[data-leave-class]");
              if (!btn || !mLeave || !lvForm) return;

              const classId = btn.getAttribute("data-leave-class");
              const hid = lvForm.querySelector('input[name="classId"]');
              if (hid) hid.value = classId || "";

              lvErr?.classList.add("d-none");
              lvBtn?.removeAttribute("disabled");
              lvBtn?.querySelector(".spinner-border")?.classList.add("d-none");

              mLeave.show();

              // backdrop confirm đè lên backdrop của Quick View
              setTimeout(() => {
                const backs = $$(".modal-backdrop");
                if (backs.length) {
                  const top = backs[backs.length - 1];
                  top.classList.add("backdrop-strong","backdrop-over-qv");
                  top.style.zIndex = "1065";
                }
              }, 0);
            });

            // Cancel confirm -> vẫn cho mở lại lần sau
            lvEl?.addEventListener("hidden.bs.modal", () => {
              // không xóa hết backdrop; Bootstap tự quản
            });

            // đóng Quick View -> dọn rác nếu có
            qvEl?.addEventListener("hidden.bs.modal", () => {
              // nếu confirm còn mở, đừng đụng; nếu không, xóa backdrop thừa (hiếm)
              const opens = $$(".modal.show");
              if (!opens.length) {
                $$(".modal-backdrop").forEach(b=>b.remove());
                document.body.classList.remove("modal-open");
                document.body.style.removeProperty("padding-right");
              }
            });

            // Submit rời lớp
            lvForm?.addEventListener("submit", async (e) => {
              e.preventDefault();
              lvErr?.classList.add("d-none");
              lvBtn?.setAttribute("disabled","disabled");
              lvBtn?.querySelector(".spinner-border")?.classList.remove("d-none");

              try{
                const fd = new FormData(lvForm);
                const resp = await fetch(lvForm.action, {
                  method:"POST", body:fd, credentials:"same-origin",
                  headers:{ "X-Requested-With":"XMLHttpRequest" }
                });
                let data = null; try { data = await resp.json(); } catch {}
                if (!resp.ok || !data?.ok) throw new Error(data?.message || "Leave failed");

                // đóng confirm + QV, show success rồi reload
                mLeave?.hide();
                qv?.hide();
                if (mOk) {
                  mOk.show();
                  setTimeout(()=>location.reload(), 2000);
                } else {
                  setTimeout(()=>location.reload(), 400);
                }
              }catch(ex){
                console.error(ex);
                lvErr?.classList.remove("d-none");
              }finally{
                lvBtn?.removeAttribute("disabled");
                lvBtn?.querySelector(".spinner-border")?.classList.add("d-none");
              }
            });
          });

        })();
    </script>
}





